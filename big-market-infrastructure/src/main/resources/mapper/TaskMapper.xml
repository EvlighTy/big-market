<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.evlight.infrastructure.persistent.dao.TaskMapper">

    <resultMap id="dataMap" type="cn.evlight.infrastructure.persistent.po.Task">
        <id column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="topic" property="topic"/>
        <result column="message_id" property="messageId"/>
        <result column="message" property="message"/>
        <result column="state" property="state"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
    </resultMap>

    <insert id="save" parameterType="cn.evlight.infrastructure.persistent.po.UserAwardRecord">
        insert into
            task( user_id, topic, message_id, message, state, create_time, update_time )
        values
            ( #{userId}, #{topic}, #{messageId}, #{message}, #{state}, now(), now() )
    </insert>

    <update id="updateAfterCompleted" parameterType="cn.evlight.infrastructure.persistent.po.Task">
        update task
        set state = 'completed', update_time = now()
        where user_id = #{userId} and message_id = #{messageId}
    </update>

    <update id="updateAfterFailed" parameterType="cn.evlight.infrastructure.persistent.po.Task">
        update task
        set state = 'fail', update_time = now()
        where user_id = #{userId} and message_id = #{messageId}
    </update>

    <update id="updateBatchAfterCompleted" parameterType="java.util.List">
        <foreach collection="tasks" item="task" separator=";">
            update task
            set state = 'completed', update_time = now()
            where user_id = #{task.userId} and message_id = #{task.messageId}
        </foreach>
    </update>

    <update id="updateBatchAfterFailed" parameterType="java.util.List">
        <foreach collection="tasks" item="task" separator=";">
            update task
            set state = 'fail', update_time = now()
            where user_id = #{task.userId} and message_id = #{task.messageId}
        </foreach>
    </update>

    <insert id="saveBatch" parameterType="cn.evlight.infrastructure.persistent.po.Task">
        insert into task
            (user_id, topic, message_id, message, state, create_time, update_time)
        values
            <foreach collection="tasks" item="task" separator=",">
                (
                #{task.userId}, #{task.topic}, #{task.messageId}, #{task.message}, #{task.state}, now(), now()
                )
            </foreach>

    </insert>

    <select id="queryUnSendMessageTaskList" resultMap="dataMap">
        select user_id, topic, message_id, message
        from task
        where state = 'fail' or (state = 'create' and now() - update_time > 6)
        limit 10
    </select>

</mapper>
